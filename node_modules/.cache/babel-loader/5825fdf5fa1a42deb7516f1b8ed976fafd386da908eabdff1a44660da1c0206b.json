{"ast":null,"code":"import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nvar svgMotionConfig = {\n  useVisualState: makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n    onMount: function (props, instance, _a) {\n      var renderState = _a.renderState,\n        latestValues = _a.latestValues;\n      try {\n        renderState.dimensions = typeof instance.getBBox === \"function\" ? instance.getBBox() : instance.getBoundingClientRect();\n      } catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n      buildSVGAttrs(renderState, latestValues, {\n        enableHardwareAcceleration: false\n      }, props.transformTemplate);\n      renderSVG(instance, renderState);\n    }\n  })\n};\nexport { svgMotionConfig };","map":{"version":3,"names":["renderSVG","scrapeMotionValuesFromProps","makeUseVisualState","createSvgRenderState","buildSVGAttrs","svgMotionConfig","useVisualState","createRenderState","onMount","props","instance","_a","renderState","latestValues","dimensions","getBBox","getBoundingClientRect","e","x","y","width","height","enableHardwareAcceleration","transformTemplate"],"sources":["E:/TakeoffAviationWebsite/node_modules/framer-motion/dist/es/render/svg/config-motion.mjs"],"sourcesContent":["import { renderSVG } from './utils/render.mjs';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\r\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\r\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\r\n\r\nvar svgMotionConfig = {\r\n    useVisualState: makeUseVisualState({\r\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\r\n        createRenderState: createSvgRenderState,\r\n        onMount: function (props, instance, _a) {\r\n            var renderState = _a.renderState, latestValues = _a.latestValues;\r\n            try {\r\n                renderState.dimensions =\r\n                    typeof instance.getBBox ===\r\n                        \"function\"\r\n                        ? instance.getBBox()\r\n                        : instance.getBoundingClientRect();\r\n            }\r\n            catch (e) {\r\n                // Most likely trying to measure an unrendered element under Firefox\r\n                renderState.dimensions = {\r\n                    x: 0,\r\n                    y: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                };\r\n            }\r\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, props.transformTemplate);\r\n            renderSVG(instance, renderState);\r\n        },\r\n    }),\r\n};\r\n\r\nexport { svgMotionConfig };\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,2BAA2B,QAAQ,kCAAkC;AAC9E,SAASC,kBAAkB,QAAQ,yCAAyC;AAC5E,SAASC,oBAAoB,QAAQ,iCAAiC;AACtE,SAASC,aAAa,QAAQ,yBAAyB;AAEvD,IAAIC,eAAe,GAAG;EAClBC,cAAc,EAAEJ,kBAAkB,CAAC;IAC/BD,2BAA2B,EAAEA,2BAA2B;IACxDM,iBAAiB,EAAEJ,oBAAoB;IACvCK,OAAO,EAAE,SAAAA,CAAUC,KAAK,EAAEC,QAAQ,EAAEC,EAAE,EAAE;MACpC,IAAIC,WAAW,GAAGD,EAAE,CAACC,WAAW;QAAEC,YAAY,GAAGF,EAAE,CAACE,YAAY;MAChE,IAAI;QACAD,WAAW,CAACE,UAAU,GAClB,OAAOJ,QAAQ,CAACK,OAAO,KACnB,UAAU,GACRL,QAAQ,CAACK,OAAO,CAAC,CAAC,GAClBL,QAAQ,CAACM,qBAAqB,CAAC,CAAC;MAC9C,CAAC,CACD,OAAOC,CAAC,EAAE;QACN;QACAL,WAAW,CAACE,UAAU,GAAG;UACrBI,CAAC,EAAE,CAAC;UACJC,CAAC,EAAE,CAAC;UACJC,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE;QACZ,CAAC;MACL;MACAjB,aAAa,CAACQ,WAAW,EAAEC,YAAY,EAAE;QAAES,0BAA0B,EAAE;MAAM,CAAC,EAAEb,KAAK,CAACc,iBAAiB,CAAC;MACxGvB,SAAS,CAACU,QAAQ,EAAEE,WAAW,CAAC;IACpC;EACJ,CAAC;AACL,CAAC;AAED,SAASP,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}