{"ast":null,"code":"import { __read } from 'tslib';\nimport { clamp, mix, progress } from 'popmotion';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\r\n * Apply constraints to a point. These constraints are both physical along an\r\n * axis, and an elastic factor that determines how much to constrain the point\r\n * by if it does lie outside the defined parameters.\r\n */\nfunction applyConstraints(point, _a, elastic) {\n  var min = _a.min,\n    max = _a.max;\n  if (min !== undefined && point < min) {\n    // If we have a min point defined, and this is outside of that, constrain\n    point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n  } else if (max !== undefined && point > max) {\n    // If we have a max point defined, and this is outside of that, constrain\n    point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n  }\n  return point;\n}\n/**\r\n * Calculate constraints in terms of the viewport when defined relatively to the\r\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\r\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\r\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n  return {\n    min: min !== undefined ? axis.min + min : undefined,\n    max: max !== undefined ? axis.max + max - (axis.max - axis.min) : undefined\n  };\n}\n/**\r\n * Calculate constraints in terms of the viewport when\r\n * defined relatively to the measured bounding box.\r\n */\nfunction calcRelativeConstraints(layoutBox, _a) {\n  var top = _a.top,\n    left = _a.left,\n    bottom = _a.bottom,\n    right = _a.right;\n  return {\n    x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n    y: calcRelativeAxisConstraints(layoutBox.y, top, bottom)\n  };\n}\n/**\r\n * Calculate viewport constraints when defined as another viewport-relative axis\r\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n  var _a;\n  var min = constraintsAxis.min - layoutAxis.min;\n  var max = constraintsAxis.max - layoutAxis.max;\n  // If the constraints axis is actually smaller than the layout axis then we can\n  // flip the constraints\n  if (constraintsAxis.max - constraintsAxis.min < layoutAxis.max - layoutAxis.min) {\n    _a = __read([max, min], 2), min = _a[0], max = _a[1];\n  }\n  return {\n    min: min,\n    max: max\n  };\n}\n/**\r\n * Calculate viewport constraints when defined as another viewport-relative box\r\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n  return {\n    x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n    y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y)\n  };\n}\n/**\r\n * Calculate a transform origin relative to the source axis, between 0-1, that results\r\n * in an asthetically pleasing scale/transform needed to project from source to target.\r\n */\nfunction calcOrigin(source, target) {\n  var origin = 0.5;\n  var sourceLength = calcLength(source);\n  var targetLength = calcLength(target);\n  if (targetLength > sourceLength) {\n    origin = progress(target.min, target.max - sourceLength, source.min);\n  } else if (sourceLength > targetLength) {\n    origin = progress(source.min, source.max - targetLength, target.min);\n  }\n  return clamp(0, 1, origin);\n}\n/**\r\n * Rebase the calculated viewport constraints relative to the layout.min point.\r\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n  var relativeConstraints = {};\n  if (constraints.min !== undefined) {\n    relativeConstraints.min = constraints.min - layout.min;\n  }\n  if (constraints.max !== undefined) {\n    relativeConstraints.max = constraints.max - layout.min;\n  }\n  return relativeConstraints;\n}\nvar defaultElastic = 0.35;\n/**\r\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\r\n */\nfunction resolveDragElastic(dragElastic) {\n  if (dragElastic === void 0) {\n    dragElastic = defaultElastic;\n  }\n  if (dragElastic === false) {\n    dragElastic = 0;\n  } else if (dragElastic === true) {\n    dragElastic = defaultElastic;\n  }\n  return {\n    x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n    y: resolveAxisElastic(dragElastic, \"top\", \"bottom\")\n  };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n  return {\n    min: resolvePointElastic(dragElastic, minLabel),\n    max: resolvePointElastic(dragElastic, maxLabel)\n  };\n}\nfunction resolvePointElastic(dragElastic, label) {\n  var _a;\n  return typeof dragElastic === \"number\" ? dragElastic : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };","map":{"version":3,"names":["__read","clamp","mix","progress","calcLength","applyConstraints","point","_a","elastic","min","max","undefined","Math","calcRelativeAxisConstraints","axis","calcRelativeConstraints","layoutBox","top","left","bottom","right","x","y","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","calcOrigin","source","target","origin","sourceLength","targetLength","rebaseAxisConstraints","layout","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label"],"sources":["E:/TakeoffAviationWebsite/node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs"],"sourcesContent":["import { __read } from 'tslib';\r\nimport { clamp, mix, progress } from 'popmotion';\r\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\r\n\r\n/**\r\n * Apply constraints to a point. These constraints are both physical along an\r\n * axis, and an elastic factor that determines how much to constrain the point\r\n * by if it does lie outside the defined parameters.\r\n */\r\nfunction applyConstraints(point, _a, elastic) {\r\n    var min = _a.min, max = _a.max;\r\n    if (min !== undefined && point < min) {\r\n        // If we have a min point defined, and this is outside of that, constrain\r\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\r\n    }\r\n    else if (max !== undefined && point > max) {\r\n        // If we have a max point defined, and this is outside of that, constrain\r\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\r\n    }\r\n    return point;\r\n}\r\n/**\r\n * Calculate constraints in terms of the viewport when defined relatively to the\r\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\r\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\r\n */\r\nfunction calcRelativeAxisConstraints(axis, min, max) {\r\n    return {\r\n        min: min !== undefined ? axis.min + min : undefined,\r\n        max: max !== undefined\r\n            ? axis.max + max - (axis.max - axis.min)\r\n            : undefined,\r\n    };\r\n}\r\n/**\r\n * Calculate constraints in terms of the viewport when\r\n * defined relatively to the measured bounding box.\r\n */\r\nfunction calcRelativeConstraints(layoutBox, _a) {\r\n    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\r\n    return {\r\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\r\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\r\n    };\r\n}\r\n/**\r\n * Calculate viewport constraints when defined as another viewport-relative axis\r\n */\r\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\r\n    var _a;\r\n    var min = constraintsAxis.min - layoutAxis.min;\r\n    var max = constraintsAxis.max - layoutAxis.max;\r\n    // If the constraints axis is actually smaller than the layout axis then we can\r\n    // flip the constraints\r\n    if (constraintsAxis.max - constraintsAxis.min <\r\n        layoutAxis.max - layoutAxis.min) {\r\n        _a = __read([max, min], 2), min = _a[0], max = _a[1];\r\n    }\r\n    return { min: min, max: max };\r\n}\r\n/**\r\n * Calculate viewport constraints when defined as another viewport-relative box\r\n */\r\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\r\n    return {\r\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\r\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\r\n    };\r\n}\r\n/**\r\n * Calculate a transform origin relative to the source axis, between 0-1, that results\r\n * in an asthetically pleasing scale/transform needed to project from source to target.\r\n */\r\nfunction calcOrigin(source, target) {\r\n    var origin = 0.5;\r\n    var sourceLength = calcLength(source);\r\n    var targetLength = calcLength(target);\r\n    if (targetLength > sourceLength) {\r\n        origin = progress(target.min, target.max - sourceLength, source.min);\r\n    }\r\n    else if (sourceLength > targetLength) {\r\n        origin = progress(source.min, source.max - targetLength, target.min);\r\n    }\r\n    return clamp(0, 1, origin);\r\n}\r\n/**\r\n * Rebase the calculated viewport constraints relative to the layout.min point.\r\n */\r\nfunction rebaseAxisConstraints(layout, constraints) {\r\n    var relativeConstraints = {};\r\n    if (constraints.min !== undefined) {\r\n        relativeConstraints.min = constraints.min - layout.min;\r\n    }\r\n    if (constraints.max !== undefined) {\r\n        relativeConstraints.max = constraints.max - layout.min;\r\n    }\r\n    return relativeConstraints;\r\n}\r\nvar defaultElastic = 0.35;\r\n/**\r\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\r\n */\r\nfunction resolveDragElastic(dragElastic) {\r\n    if (dragElastic === void 0) { dragElastic = defaultElastic; }\r\n    if (dragElastic === false) {\r\n        dragElastic = 0;\r\n    }\r\n    else if (dragElastic === true) {\r\n        dragElastic = defaultElastic;\r\n    }\r\n    return {\r\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\r\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\r\n    };\r\n}\r\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\r\n    return {\r\n        min: resolvePointElastic(dragElastic, minLabel),\r\n        max: resolvePointElastic(dragElastic, maxLabel),\r\n    };\r\n}\r\nfunction resolvePointElastic(dragElastic, label) {\r\n    var _a;\r\n    return typeof dragElastic === \"number\"\r\n        ? dragElastic\r\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\r\n}\r\n\r\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}