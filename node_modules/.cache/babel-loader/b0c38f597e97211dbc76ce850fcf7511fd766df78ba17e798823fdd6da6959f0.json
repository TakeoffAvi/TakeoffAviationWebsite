{"ast":null,"code":"import { useConstant } from './use-constant.mjs';\nvar counter = 0;\nvar incrementId = function () {\n  return counter++;\n};\nvar useId = function () {\n  return useConstant(incrementId);\n};\n/**\r\n * Ideally we'd use the following code to support React 18 optionally.\r\n * But this fairly fails in Webpack (otherwise treeshaking wouldn't work at all).\r\n * Need to come up with a different way of figuring this out.\r\n */\n// export const useId = (React as any).useId\n//     ? (React as any).useId\n//     : () => useConstant(incrementId)\n\nexport { useId };","map":{"version":3,"names":["useConstant","counter","incrementId","useId"],"sources":["C:/Users/Shaikh Mohammed Saud/Documents/GitHub/Aviation_final/node_modules/framer-motion/dist/es/utils/use-id.mjs"],"sourcesContent":["import { useConstant } from './use-constant.mjs';\r\n\r\nvar counter = 0;\r\nvar incrementId = function () { return counter++; };\r\nvar useId = function () { return useConstant(incrementId); };\r\n/**\r\n * Ideally we'd use the following code to support React 18 optionally.\r\n * But this fairly fails in Webpack (otherwise treeshaking wouldn't work at all).\r\n * Need to come up with a different way of figuring this out.\r\n */\r\n// export const useId = (React as any).useId\r\n//     ? (React as any).useId\r\n//     : () => useConstant(incrementId)\r\n\r\nexport { useId };\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,oBAAoB;AAEhD,IAAIC,OAAO,GAAG,CAAC;AACf,IAAIC,WAAW,GAAG,SAAAA,CAAA,EAAY;EAAE,OAAOD,OAAO,EAAE;AAAE,CAAC;AACnD,IAAIE,KAAK,GAAG,SAAAA,CAAA,EAAY;EAAE,OAAOH,WAAW,CAACE,WAAW,CAAC;AAAE,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}